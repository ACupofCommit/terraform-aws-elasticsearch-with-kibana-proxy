server {
    listen 80;
    server_name $KIBANA_HOST;
    rewrite ^/$ https://$KIBANA_HOST/_plugin/kibana redirect;

    location = /_plugin/kibana {
        # Redirect login page with redirect_uri
        # https://${COGNITO_HOST}/login?response_type=code&client_id=5m3h285mebqljad3seoj9ca9bh&redirect_uri=https://kibana3.aluc.io/_plugin/kibana/app/kibana
        # ex: https://es-user-pool-domain.auth.ap-northeast-1.amazoncognito.com/login?response_type=code&client_id=5m3h285mebqljad3seoj9ca9bh&redirect_uri=https://kibana3.aluc.io/_plugin/kibana/app/kibana
        rewrite ^ https://${USER_POOL_DOMAIN}.auth.${AWS_REGION}.amazoncognito.com/login?response_type=code&client_id=${COGNITO_CLIENT_ID}&redirect_uri=https://${KIBANA_HOST}%2F_plugin/kibana/app/kibana;
    }

    location = /health {
      return 200 'gangnam style!';
    }

    location ^~ /_plugin/kibana {
        # Forward requests to Kibana
        proxy_pass https://${ES_HOST}/_plugin/kibana;

        # Handle redirects to Amazon Cognito
        proxy_redirect https://${COGNITO_HOST} https://$KIBANA_HOST;

        # Update cookie domain and path
        proxy_cookie_domain ${ES_HOST} $KIBANA_HOST;

        proxy_set_header Accept-Encoding "";
        sub_filter_types *;
        sub_filter ${ES_HOST} $KIBANA_HOST;
        sub_filter_once off;

        # Response buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    location ~ \/(log|sign|error|fav|forgot|change|confirm) {
        # Forward requests to Cognito
        proxy_pass https://${COGNITO_HOST};

        # Handle redirects to Kibana
        proxy_redirect https://${ES_HOST} https://$KIBANA_HOST;

        # Handle redirects to Amazon Cognito
        proxy_redirect https://${COGNITO_HOST} https://$KIBANA_HOST;

        # Update cookie domain
        proxy_cookie_domain ${COGNITO_HOST} $KIBANA_HOST;
    }
}

